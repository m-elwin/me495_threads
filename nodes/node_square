#!/usr/bin/env python
""" Compute the square of numbers within a range. 


    Service Calls:
       complete (std_srvs/Empty) indicate when node is finished running

"""

import argparse
import rospy
from me495_threads import squares
from std_srvs.srv import Empty
import timeit

if __name__ == "__main__":
   rospy.init_node("node_square")

   parser = argparse.ArgumentParser()
   # parse command line arguments to know what to compute
   parser.add_argument("--min", help="minimum number to square")
   parser.add_argument("--max", help="maximum number to square")
   # parse the arguments after removing ros-specific args
   # also, remove the first argument which is the name of the node executable
   args = parser.parse_args(rospy.myargv()[1:])
  
   rospy.wait_for_service("complete")
   complete = rospy.ServiceProxy("complete", Empty)

   start = timeit.default_timer()
   squares(int(args.min), int(args.max))
   end = timeit.default_timer()
   rospy.loginfo("Completed in: %s", str(end - start))
   complete()
   rospy.spin()
    
   

   
